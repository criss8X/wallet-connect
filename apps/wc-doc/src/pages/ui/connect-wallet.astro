---
import StepSection from "@/components/step.astro";
import RootLayout from "@/layouts/RootLayout.astro";
import WCStatus from "@/sections/wc-status.astro";
---

<RootLayout title="ConnectWallet.tsx">
  <div class="flex flex-col gap-10 size-full pb-8 max-w-6xl">
    <StepSection title="Connect Wallet" className="space-y-2">
      <p class="opacity-80 text-lg">
        Componente principal, en su interior se encuentran varias partes que
        conforman su funcionamiento, cuenta con dos estados, y sub componentes
        reutilizables que muestran la informacion correcta dependiendo del
        estado en que se encuentra. Todo será explicado a continuación.
      </p>
    </StepSection>

    <StepSection title="Estados">
      <WCStatus />
    </StepSection>

    <StepSection title="Componentes internos">
      <ul class="space-y-8">
        <li class="space-y-2">
          <h4 class="text-2xl">1. Connect Wallet Dialog</h4>

          <p>
            Componente encargado de mostrar al usuario el diálogo que permite
            conectar una wallet de la lista de conectore disponibles. El listado
            de <strong>conectores</strong> se establece en la configuración de <strong
              >wagmi</strong
            > como se explica en: [poner link de la documentacion de wagmi aqui].
            Cuantos más conectores permitas será mejor para el usuario final!
          </p>

          <p>[poner captura aqui]</p>
        </li>

        <li class="space-y-2">
          <h4 class="text-2xl">Wagmi Account</h4>

          <p>
            Además de proveer información como el saldo de la cuenta, el avatar
            y la dirección de billetera. También, a modo de modal, se le permite
            al usuario cerrar sessión o copiar su dirección de billetera, no se
            implementaron más funciones para mantenerlo minimalista, pero como
            desarrollador puedes agregarle mas funciones, la base ya esta
            hecha!!
          </p>

          <p>[poner captura aqui]</p>
          <p>[poner captura del diálogo aqui también]</p>
        </li>

        <li class="space-y-2">
          <h4 class="text-2xl">Chain Selector Dialog</h4>

          <p>
            Por defecto, muestra la cadena actual, pero, te permite cambiar a
            otras cadenas que se encuentren disponibles. El componente
            internamente utiliza las cadenas que hayas establecido en la
            configuración de wagmi, si tienes dudas sobre como establecer las
            cadenas en tu configuración de wagmi consulta en [poner enlace a la
            documentacion especifica para esto]
          </p>

          <p>
            <b>currentChain</b>: Es el parámetro que llega desde el componente
            ChainSelector que te permite saber el nombre de la cadena actual con
            la finalidad de que puedas estilar el `Trigger` del selector de
            cadena.
          </p>

          <p>[poner captura aqui]</p>
          <p>[poner captura del diálogo aqui también]</p>
        </li>

        <li class="space-y-2">
          <h4 class="text-2xl">AccountAvatarImage</h4>

          <p>
            No es más que un wrapper del componente `AvatarImage` de shadcn con
            cierta lógica adicional como la de establecer un avatar en caso de
            que el usuario no tenga un ENS Avatar establecido.
          </p>

          <p>
            - <b>address</b>: Dirección de la wallet a la que se le desea
            mostrar el avatar.

            <br />

            - <b>defaultAvatarUrl</b>: Es una url alternativa en caso de que el
            usuario no tenga ENS Avatar, como desarrollador puedes pasar como
            parametro tu propia url, por defecto se usa:
            https://effigy.im/a/[address].svg
          </p>
        </li>

        <li class="space-y-2">
          <h4 class="text-2xl">AccountBalance</h4>

          <p>
            Este componente muestra como texto el saldo actual de la cuenta, es
            un componente altamente reutilizable.
          </p>

          <p>
            - <b>as</b>: Por defecto es "span", este parámetro afecta en con que
            etiqueta quieres que sea renderizado el elemento.
          </p>
        </li>
      </ul>
    </StepSection>
  </div>
</RootLayout>
