---
import { codeToHtml } from "shiki";
import cn from "@/lib/cn";

interface Props {
  title: string;
  code: string;
  className?: string;
}

const { className, title, code } = Astro.props;

const codeInHtml = await codeToHtml(code, {
  lang: "tsx",
  theme: "one-dark-pro",
  colorReplacements: {
    "#282c34": "#17171700",
  },
});
---

<div
  class={cn(
    "relative flex w-full max-w-4xl max-h-125 bg-neutral-900/50 border border-neutral-800",
    className,
  )}
>
  <div class="absolute h-14 w-full flex items-center justify-between px-4">
    <span class="opacity-50">{title}</span>

    <button
      class="bg-neutral-800/60 hover:bg-neutral-800 hover:cursor-pointer w-20 rounded-xs py-0.5"
      data-code={code}
      onclick="copyToClipboard(this);"
    >
      Copy
    </button>
  </div>

  <div class="flex-1 mt-14 p-4 overflow-auto" data-copy set:html={codeInHtml} />
</div>

<script is:inline>
  async function copyToClipboard(button) {
    const code = button.dataset.code;

    if (typeof code !== "string") {
      return;
    }

    await navigator.clipboard.writeText(code);
    button.textContent = "Copied!";

    setTimeout(() => {
      button.textContent = "Copy";
    }, 2000);
  }
</script>

<style is:inline>
  ::-webkit-scrollbar {
    background-color: transparent;
  }

  ::-webkit-scrollbar-thumb {
    background-color: #262626;
  }

  ::-webkit-scrollbar-corner {
    background-color: transparent;
  }
</style>

<!-- TODO: Checklist for I do -->
<!-- Implement syntax highlight, prefer use `react-ts` highlight -->
<!-- Implement mobile responsive -->
